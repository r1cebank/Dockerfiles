{"version":3,"sources":["util/bootstrap.js"],"names":[],"mappings":";;;;;;;;;;;;;;;4BAS6B,gBAAgB;;;;uBAChB,SAAS;;;;wBACT,UAAU;;;;uBACV,SAAS;;;;sBACT,QAAQ;;;;6BACR,mBAAmB;;;;AAGhD,SAAS,SAAS,GAAI;;;AAGlB,QAAI,GAAG,GAAG,WAAW,CAAC;;;AAGtB,QAAI,cAAc,GAAG,0BAAa,WAAW,EAAE,CAAC;;;AAGhD,kBAAc,CAAC,GAAG,GAAG,IAAK,qBAAQ,MAAM,CAAE;AACtC,kBAAU,EAAE,CACR,IAAK,qBAAQ,UAAU,CAAC,OAAO,CAAE;AAC7B,oBAAQ,EAAM,KAAK;AACnB,iBAAK,EAAS,SAAS;SAC1B,CAAC,CACL;KACJ,CAAC,CAAC;AACH,kBAAc,CAAC,CAAC,GAAG;AACf,eAAO,EAAK,iBAAC,GAAG,EAAE,GAAG,EAAK;AAAC,0BAAc,CAAC,GAAG,CAAC,OAAO,OAAK,GAAG,YAAO,GAAG,CAAG,CAAC;SAAC;AAC5E,YAAI,EAAQ,cAAC,GAAG,EAAE,GAAG,EAAK;AAAC,0BAAc,CAAC,GAAG,CAAC,IAAI,OAAK,GAAG,YAAO,GAAG,CAAG,CAAC;SAAC;AACzE,aAAK,EAAO,eAAC,GAAG,EAAE,GAAG,EAAK;AAAC,0BAAc,CAAC,GAAG,CAAC,KAAK,OAAK,GAAG,YAAO,GAAG,CAAG,CAAC;SAAC;AAC1E,YAAI,EAAQ,cAAC,GAAG,EAAE,GAAG,EAAK;AAAC,0BAAc,CAAC,GAAG,CAAC,IAAI,OAAK,GAAG,YAAO,GAAG,CAAG,CAAC;SAAC;KAC5E,CAAC;;;AAGF,6BAAM,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC7C,6BAAM,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACjD,6BAAM,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;AAGtD,QAAI,MAAM,GAAG,2BAAI,CAAC;;;AAGlB,kBAAc,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAClF,kBAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAK,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,gBAAa,CAAC;;;;;AAKjF,kBAAc,CAAC,SAAS,GAAG,+BAAc,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1E,kBAAc,CAAC,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;;AAEjD,kBAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;CACrD;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"util/bootstrap.js","sourcesContent":["/**\n * Created by r1cebank on 8/19/15.\n */\n\n/*!\n *  Bootstrap is ran first will set all the necessary things like in appsingleton\n *  loggers, configs and many other things. It is reusable in many other applications\n */\n\nimport AppSingleton     from './appsingleton';\nimport Winston          from 'winston';\nimport Promise          from 'bluebird';\nimport DB               from 'tingodb';\nimport Mkdir            from 'mkdirp';\nimport Authority        from '../auth/authority';\n\n\nfunction bootstrap () {\n\n    //  Log tag\n    var TAG = \"bootstrap\";\n\n    //  This instance is shared across the entire app life-cycle\n    var sharedInstance = AppSingleton.getInstance();\n\n    //  Creating a new shared instance for winston logger\n    sharedInstance.Log = new (Winston.Logger)({\n        transports: [\n            new (Winston.transports.Console)({\n                colorize    : 'all',\n                level       : 'verbose'\n            })\n        ]\n    });\n    sharedInstance.L = {\n        verbose :   (tag, log) => {sharedInstance.Log.verbose(`[${tag}] : ${log}`);},\n        info    :   (tag, log) => {sharedInstance.Log.info(`[${tag}] : ${log}`);},\n        error   :   (tag, log) => {sharedInstance.Log.error(`[${tag}] : ${log}`);},\n        warn    :   (tag, log) => {sharedInstance.Log.warn(`[${tag}] : ${log}`);}\n    };\n\n    //  Create all the folder needed for this application\n    Mkdir(sharedInstance.config.server.database);\n    Mkdir(sharedInstance.config.server.storage.dest);\n    Mkdir(sharedInstance.config.server.storage.processed);\n\n    //  Setup local master db connection here\n    var Engine = DB();  //  Create a db engine\n\n    //  Create the database for yaas, mongodb compliant\n    sharedInstance.buckets = new Engine.Db(sharedInstance.config.server.database, {});\n    sharedInstance.L.info(TAG, `${sharedInstance.config.server.database} is loaded`);\n\n    //  Promisify functions\n\n    //  Setup authority\n    sharedInstance.authority = new Authority(sharedInstance.config.auth.type);\n    sharedInstance.auth = sharedInstance.config.auth;\n\n    sharedInstance.L.info(TAG, \"Bootstrap complete!\");\n}\n\nmodule.exports = bootstrap;\n"],"sourceRoot":"/source/"}
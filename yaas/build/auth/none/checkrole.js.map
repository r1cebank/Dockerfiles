{"version":3,"sources":["auth/none/checkrole.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;gCAQiC,yBAAyB;;;;AAE1D,SAAS,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE;;;;;;AAM5B,MAAI,GAAG,GAAG,qBAAqB,CAAC;;AAEhC,MAAG,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;AACtB,kCAAa,WAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC;AACxE,WAAO,IAAI,CAAC;GACf,MAAM;AACH,kCAAa,WAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,0BAA0B,CAAC,CAAC;AACtE,WAAO,KAAK,CAAC;GAChB;CACJ;;qBAEc,EAAC,SAAS,EAAT,SAAS,EAAC","file":"auth/none/checkrole.js","sourcesContent":["/**\n * Created by r1cebank on 8/24/15.\n */\n\n/*!\n *  None will not care about roles, everyhting is permitted\n */\n\nimport AppSingleton         from '../../util/appsingleton';\n\nfunction checkrole (user, role) {\n\n    /*  Any role will be permitted, but will check user to see if the user is coming from the none checkauth\n     *  If user doesn't equal no auth, we will fail.\n     */\n\n    let TAG = 'auth:none:checkrole';\n\n    if(user.user == 'noauth') {\n        AppSingleton.getInstance().L.verbose(TAG, 'checkauth is passing allow');\n        return true;\n    } else {\n        AppSingleton.getInstance().L.verbose(TAG, 'something is very refuse');\n        return false;\n    }\n}\n\nexport default {checkrole};"],"sourceRoot":"/source/"}
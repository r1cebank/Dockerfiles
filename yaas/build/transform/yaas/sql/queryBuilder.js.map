{"version":3,"sources":["transform/yaas/sql/queryBuilder.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;gCASqC,4BAA4B;;;;AAEjE,SAAS,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE;;;AAG/C,QAAI,GAAG,GAAG,0BAA0B,CAAC;;;AAGrC,QAAI,cAAc,GAAG,8BAAa,WAAW,EAAE,CAAC;;;AAGhD,QAAI,SAAS,GAAG,aAAa,CAAC;AAC9B,QAAI,UAAU,GAAG,cAAc,CAAC;;;AAGhC,QAAI,KAAK,GAAG,EAAE;QACV,MAAM,GAAG,EAAE;QACX,GAAG,GAAG,EAAE,CAAC;;;AAGb,WAAM,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;AAEzB,aAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,cAAM,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,WAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACnB,aAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KACtC;;;AAGD,WAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;AAE1B,aAAK,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,cAAM,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,WAAG,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3C,aAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KACtC;;AAED,kBAAc,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,oBAAkB,KAAK,CAAG,CAAC;;AAEvD,WAAO,KAAK,CAAC;CAChB;;qBAEc,EAAC,UAAU,EAAV,UAAU,EAAC","file":"transform/yaas/sql/queryBuilder.js","sourcesContent":["/**\n * Created by r1cebank on 9/1/15.\n */\n\n/*!\n *  This file provides the needed function to create query from user input,\n *  replacing the placeholders with real values and make sure input are escaped\n */\n\nimport AppSingleton             from '../../../util/appsingleton';\n\nfunction buildQuery(query, input, req, connection) {\n\n    //  Log Tag\n    let TAG = \"transform:yaas:sql:build\";\n\n    //  Shared instance\n    var sharedInstance = AppSingleton.getInstance();\n\n    //  Regex\n    let nameRegex = /<%([0-9]+)>/;\n    let valueRegex = /<\\$([0-9]+)>/;\n\n    //  Never declare variable in a loop\n    var match = \"\",\n        match0 = \"\",\n        key = \"\";\n\n    // replace query params\n    while(nameRegex.test(query)) {\n        // Loop until regex no longer match item\n        match = nameRegex.exec(query)[1];       //  Get the param number\n        match0 = nameRegex.exec(query)[0];      //  Get the actual match\n        key = input[match];                               //  Get the key name\n        query = query.replace(match0, key);                     //  Replace the key with actual value name\n    }\n\n    //  replace the values in a loop\n    while(valueRegex.test(query)) {\n        // Loop until regex no longer match item\n        match = valueRegex.exec(query)[1];\n        match0 = valueRegex.exec(query)[0];\n        key = connection.escape(req[input[match]]);\n        query = query.replace(match0, key);\n    }\n\n    sharedInstance.L.verbose(TAG, `query built: ${query}`);\n\n    return query;\n}\n\nexport default {buildQuery};"],"sourceRoot":"/source/"}